---
  variables:
    distbase: http://store.oneops.walmart.com/share/release/
    version: 13.12.16
    password: replace-with-random-password
    key: replace-with-3des-key

  platforms:

  # displaydb
  displaydb:
    pack: oneops/postgresql:1
    major_version: 1
    variables:
      dbpass: $OO_GLOBAL{password}
    components:
      secgroup/Secgroup:
        secgroup:
          inbound:
            - '22 22 tcp 0.0.0.0/0'
            - '5432 5432 tcp 0.0.0.0/0'
      compute/Compute:
        compute:
          size: M
          ostype: centos-7.2
          repo_list:
            - 'yum -y localinstall https://download.postgresql.org/pub/repos/yum/9.4/redhat/rhel-7-x86_64/pgdg-centos94-9.4-2.noarch.rpm'
      postgresql/Postgresql:
        postgresql:
          version: 9.4
          postgresql_conf:
            tcp_keepalives_count: 5
            tcp_keepalives_idle: 60
            tcp_keepalives_interval: 5
            max_connections: 1000
      database/Database:
        displaydb:
          password: $OO_LOCAL{dbpass}
          dbname: displaydb
          username: display

    # display
    display:
      pack: oneops/rails:1
      major_version: 1
      variables:
        version: $OO_GLOBAL{version}
        rails-env: production
        processes: '16'
        dbpass: $OO_GLOBAL{password}
        ASSET-URL: https://dfw-001-object-ocs.prod.walmart.com/v1/AUTH_16f78a1447394ba09679cb3471bf4f37/$OO_GLOBAL{env_name}/
        SESSION-INACTIVITY-TIMEOUT: '30'
        HELP-URL: https://confluence.walmart.com/x/EfwnAQ
        REPORT-PROBLEM-URL: https://jira.walmart.com/secure/CreateIssue.jspa?pid=10132&issuetype=10
        SUPPORT-AUTH: oneops
        SUPPORT-CHAT-URL: https://walmartlabs.slack.com/messages/oneops/
        LOG-DATA-SOURCE: es
        TERMS-OF-SERVICE-URL: http://www.oneops.com/legal/terms
        NEWS-URL: https://confluence.walmart.com/x/-hgF
        log-site: http://eslogs.core.oneops.mgmt.walmart.com:9200/
        SUPPORT-EMAIL: support@oneops.com
        PRIVACY-POLICY-URL: http://corporate.walmart.com/privacy-security/walmart-privacy-policy
        FEEDBACK-URL: https://jira.walmart.com/secure/CreateIssue.jspa?pid=10132
      links:
        - displaydb
      components:
        secgroup/Secgroup:
          secgroup:
            inbound:
              - '22 22 tcp 0.0.0.0/0'
              - '80 80 tcp 0.0.0.0/0'
        compute/Compute:
          compute:
            size: S
            ostype: centos-7.2
            repo_list:
              - 'yum-config-manager --add-repo $OO_CLOUD{satproxy}/mirrored-assets/graphviz-stable/ ; echo gpgcheck=0 >> /etc/yum.repos.d/*mirrored-assets_graphviz-stable_.repo'
        library/Library:
          library:
            packages:
              - gcc-c++
              - centos:libpq-dev ubuntu:postgresql-libs
              - centos:libxslt1-dev ubuntu:libxslt-devel
              - centos:libxml2-dev ubuntu:libxml2-devel
              - centos:zlib1g-dev ubuntu:zlib
              - graphviz
        user/User:
          display:
            username: display
            home_directory: /home/display
        artifact/Artifact:
          display:
            install_dir: /opt/oneops/display
            location: $OO_GLOBAL{distbase}/oneops-$OO_GLOBAL{version}/display.tar.gz
            version: $OO_GLOBAL{version}
            restart: |-
              env_vars = {
                'RAILS_ENV' => "$OO_LOCAL{rails-env}"
                'OODB_USERNAME' => "display",
                'OODB_PASSWORD' => "$OO_LOCAL{dbpass}"
              }
              node.set['oneops'] = {:home => '/usr/local/oneops', :settings => env_vars}
              execute "mkdir -p #{node[:oneops][:home]}"
              execute "rm -fr #{node[:oneops][:home]}/dist"
              execute "ln -sf /opt/oneops/display/releases/$OO_GLOBAL{VERSION}/oneops/dist #{node[:oneops][:home]}/dist"
              directory "#{node[:oneops][:home]}/app"
              execute 'app extract' do
                command "tar zxf #{node[:oneops][:home]}/dist/app.tar.gz --no-same-owner --no-same-permissions"
                cwd "#{node[:oneops][:home]}/app"
              end
              execute 'app bundle' do
                command "bundle install --local --without development"
                cwd "#{node[:oneops][:home]}/app"
              end
              www_user = 'display'
              execute 'set user permissions for passenger' do
                command "chown #{www_user}:#{www_user} config.ru config/environment.rb"
                cwd "#{node[:oneops][:home]}/app"
              end
              directory "#{node[:oneops][:home]}/app/log" do
                owner www_user
                group www_user
                mode '0755'
                action :create
              end
              directory "#{node[:oneops][:home]}/app/tmp/cache" do
                owner www_user
                group www_user
                mode '0755'
                recursive true
                action :create
              end
              execute "rm -fr #{node[:oneops][:home]}/app/tmp/cache/*"
              # only run on the 1st node
              # if primary and active platform version
              ci            = node.workorder.rfcCi
              compute_index = ci[:ciName].split('-').last.to_i
              if compute_index == 1 && node.workorder.cloud.ciAttributes.priority == '1' && node[:workorder][:box][:ciAttributes][:is_active] == 'true'
                execute 'app db:migrate' do
                  command "bundle exec rake db:migrate OODB_USERNAME=$OO_LOCAL{OO-DBUSER} OODB_PASSWORD=$OO_LOCAL{OO-DBPASSWORD}"
                  environment(env_vars)
                  cwd "#{node[:oneops][:home]}/app"
                  Chef::Log.info("Executing DB migrate on compute :#{compute_index}")
                end
              end
              execute 'app assets:clean and assets:precompile' do
                command "bundle exec rake assets:clean && bundle exec rake assets:precompile"
                environment(env_vars)
                cwd "#{node[:oneops][:home]}/app"
                not_if "cmp update.sha1 current.sha1", :cwd => "#{node[:oneops][:home]}/app"
              end
              execute 'app set permissions for log' do
                command "chown -R #{www_user}:#{www_user} log tmp"
                cwd "#{node[:oneops][:home]}/app"
              end
              execute 'service httpd start' do
                not_if "cmp update.sha1 current.sha1", :cwd => "#{node[:oneops][:home]}/app"
              end
        apache/Apache:
          apache:
            extra: |-
              SetOutputFilter DEFLATE
              AddOutputFilterByType DEFLATE text/html text/plain text/xml text/javascript
            ports:
              - 80
            user: display
            modules:
              - mod_log_config
              - mod_mime
              - mod_dir
              - mod_status
              - mod_alias
              - mod_auth_basic
              - mod_authz_host
              - mod_proxy
              - mod_proxy_balancer
              - mod_proxy_http
              - mod_rewrite
              - mod_headers
              - mod_expires
              - mod_ssl
              - mod_setenvif
              - mod_env
              - mod_deflate
        daemon/Daemon:
          httpd:
            service_name: httpd
            pattern: httpd
            use_script_status: true
            control_script_location: /etc/init.d/httpd
        website/Website:
          website:
            server_name: $OO_GLOBAL{fqdn-alias}
            directives: |-
              Options Indexes FollowSymLinks MultiViews
              AllowOverride AuthConfig
              Order allow,deny
              allow from all
            port: 80
            root: /usr/local/oneops/display/public
            extra: |-
              RailsEnv enterprise
              PassengerMinInstances $OO_LOCAL{processes}
              PassengerMaxPoolSize $OO_LOCAL{processes}
              SetEnv IDENTITY "$OO_GLOBAL{ENV-IDENTITY}"
              SetEnv OO_HOSTNAME web.$OO_GLOBAL{ENV-IDENTITY}.oneops.walmart.com
              SetEnv SMTP_HOSTNAME $OO_CLOUD{smtp}
              SetEnv SENSOR_HEALTH_PATH "components/states"
              SetEnv POLICY_MANAGEMENT "true"
              SetEnv CHECK_POLICY_COMPLIANCE "true"
              SetEnv OODB_USERNAME "display"
              SetEnv OODB_PASSWORD "$OO_LOCAL{dbpass}"
              SetEnv LOG_DATA_SOURCE "$OO_LOCAL{LOG-DATA-SOURCE}"
              SetEnv ASSET_URL "$OO_LOCAL{ASSET-URL}"
              SetEnv SESSION_INACTIVITY_TIMEOUT  "$OO_LOCAL{SESSION-INACTIVITY-TIMEOUT}"
              SetEnv NEWS_URL "$OO_LOCAL{NEWS-URL}"
              SetEnv HELP_URL "$OO_LOCAL{HELP-URL}"
              SetEnv FEEDBACK_URL "$OO_LOCAL{FEEDBACK-URL}"
              SetEnv REPORT_PROBLEM_URL "$OO_LOCAL{REPORT-PROBLEM-URL}"
              SetEnv SUPPORT_CHAT_URL "$OO_LOCAL{SUPPORT-CHAT-URL}"
              SetEnv TERMS_OF_SERVICE_URL "$OO_LOCAL{TERMS-OF-SERVICE-URL}"
              SetEnv PRIVACY_POLICY_URL "$OO_LOCAL{PRIVACY-POLICY-URL}"
              SetEnv SUPPORT_AUTH "$OO_LOCAL{SUPPORT-AUTH}"
              SetEnv SUPPORT_EMAIL "$OO_LOCAL{SUPPORT-EMAIL}"
              <Directory /usr/local/oneops/display/public>
                Allow from all
                Options -MultiViews
              </Directory>
              <LocationMatch "^/assets/.*$">
                Header unset ETag
                FileETag None
                # RFC says only cache for 1 year
                ExpiresActive On
                ExpiresDefault "access plus 1 year"
              </LocationMatch>
              <LocationMatch "^/images/.*$">
                Header unset ETag
                FileETag None
                ExpiresActive On
                ExpiresDefault "access plus 1 hour"
              </LocationMatch>
